{"version":3,"file":"static/js/281.d193845d.chunk.js","mappings":"6QAEaA,EAAYC,EAAAA,GAAAA,IAAH,+IAQTC,EAAQD,EAAAA,GAAAA,MAAH,oMAULE,EAAQF,EAAAA,GAAAA,GAAH,yFAKLG,EAASH,EAAAA,GAAAA,OAAH,gN,+MChBbI,EAASC,EAAAA,GACL,CACNC,KAAMD,EAAAA,KAAaE,WACnBC,MAAOH,EAAAA,KAAaE,WACpBE,SAAUJ,EAAAA,KAAaE,aAExBA,WAEUG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eACA,GAA0CC,EAAAA,EAAAA,IAAQ,CAChDC,UAAUC,EAAAA,EAAAA,GAAYb,KADhBc,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAI1BC,EAAU,mCAAG,WAAMC,GAAN,sFAEXA,EAFW,gCAGUR,EAAc,CACnCR,KAAMgB,EAAYhB,KAClBE,MAAOc,EAAYd,MACnBC,SAAUa,EAAYb,WANX,gBAGLc,EAHK,EAGLA,KAKRH,IACAT,GAASa,EAAAA,EAAAA,IAAaD,EAAKE,QAC3Bd,GAASe,EAAAA,EAAAA,IAAQ,CAAEpB,KAAMgB,EAAYhB,KAAME,MAAOc,EAAYd,SAVjD,yDAafmB,QAAQC,IAAR,MAbe,0DAAH,sDAiBhB,OACE,+BACE,UAAC,KAAD,YACE,SAAC,KAAD,0BACA,kBACEC,aAAa,MACbC,SAAUX,GAAa,SAAAI,GACrBF,EAAWE,MAHf,WAME,kBAAOQ,QAAQ,OAAf,UACE,SAAC,MAAD,gBACEC,KAAK,OACL1B,KAAK,QACDY,EAAS,OAAQ,CACnBA,UAAU,EACVX,SAAU,sBALd,IAOE0B,YAAY,gBAGhB,kBAAOF,QAAQ,QAAf,UACE,SAAC,MAAD,gBACEC,KAAK,QACL1B,KAAK,SACDY,EAAS,QAAS,CACpBA,UAAU,EACVX,SAAU,sBALd,IAOE0B,YAAY,iBAGhB,kBAAOF,QAAQ,WAAf,UACE,SAAC,MAAD,gBACEC,KAAK,WACL1B,KAAK,YACDY,EAAS,WAAY,CACvBA,UAAU,EACVX,SAAU,mBACV2B,UAAW,sBANf,IAQED,YAAY,oBAGhB,SAAC,KAAD,CAAQD,KAAK,SAAb,6BC1EV,EATsB,WAElB,OACI,gBAAKG,UAAU,oBAAf,UACA,SAACzB,EAAD","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 600px;\n  background-color: #fff;\n  padding: 20px;\n  box-shadow: 0 0 10px #662e1c;\n  border-radius: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 40px;\n  outline: none;\n  border: none;\n  border-bottom: 1px solid #662e1c;\n  margin-bottom: 20px;\n  font-size: 20px;\n  padding-left: 15px;\n`;\nexport const Title = styled.h3`\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\nexport const Button = styled.button`\n  width: 100%;\n  height: 40px;\n  background-color: #c9a66b;\n  border-radius: 5px;\n  border: none;\n  color: #ffffff;\n  font-size: 22px;\n  font-weight: 700;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Container, Input, Title, Button } from './RegisterForm.styled';\nimport { useCreateNewUserMutation } from 'redux/auth/authQueryAPI';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { setAuthToken, setUser } from 'redux/auth/authSlice';\n\nconst schema = yup\n  .object({\n    name: yup.string().required(),\n    email: yup.string().required(),\n    password: yup.string().required(),\n  })\n  .required();\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [createNewUser] = useCreateNewUserMutation();\n  const { register, handleSubmit, reset } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const addNewUser = async credentials => {\n    try {\n      if (credentials) {\n        const { data } = await createNewUser({\n          name: credentials.name,\n          email: credentials.email,\n          password: credentials.password,\n        });\n        reset();\n        dispatch(setAuthToken(data.token));\n        dispatch(setUser({ name: credentials.name, email: credentials.email }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <Title>Registrate</Title>\n        <form\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(data => {\n            addNewUser(data);\n          })}\n        >\n          <label htmlFor=\"name\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              {...register('name', {\n                register: true,\n                required: 'This is required',\n              })}\n              placeholder=\"Name...\"\n            />\n          </label>\n          <label htmlFor=\"email\">\n            <Input\n              type=\"email\"\n              name=\"email\"\n              {...register('email', {\n                register: true,\n                required: 'This is required',\n              })}\n              placeholder=\"Email...\"\n            />\n          </label>\n          <label htmlFor=\"password\">\n            <Input\n              type=\"password\"\n              name=\"password\"\n              {...register('password', {\n                register: true,\n                required: 'This is required',\n                suggested: 'current-password',\n              })}\n              placeholder=\"Password...\"\n            />\n          </label>\n          <Button type=\"submit\">Submit</Button>\n        </form>\n      </Container>\n    </>\n  );\n};\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\"\n\n const RegisterPage = () =>{\n\n    return(\n        <div className=\"container-regform\">\n        <RegisterForm/>\n        </div>\n    )\n}\n\nexport default RegisterPage"],"names":["Container","styled","Input","Title","Button","schema","yup","name","required","email","password","RegisterForm","dispatch","useDispatch","useCreateNewUserMutation","createNewUser","useForm","resolver","yupResolver","register","handleSubmit","reset","addNewUser","credentials","data","setAuthToken","token","setUser","console","log","autoComplete","onSubmit","htmlFor","type","placeholder","suggested","className"],"sourceRoot":""}